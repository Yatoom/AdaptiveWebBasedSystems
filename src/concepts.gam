$options { default.properties "event;strict"} 

General{
        ->(child) Chess
        ->(child) Starters
        ->(child) Optional
        ->(child) Professional
        #suitability:Boolean = `true`
        #visited:Integer event +`if (${#suitability}) { ${#visited}++;}`
        #resource =`~ return "[[=layout.xhtml]]";`
}
KnowledgeQuiz {
        ->(extends) General
        title `Knowledge Quiz`
        h1 `Test your knowledge`
        #content:String = `~ return "[[=placeholder.xhtml]]";`
        #resource = `~ return "[[=layout.xhtml]]";`
}
Chess{
        ->(extends) General
        title `Home`
        #[order]:Integer `1`
        h1 `Welcome to the Chess guide`
        #content:String =`~ return "[[=xml/home.xhtml]]";`
}

Starters{
        ->(extends) General
        ->(child) IntroductionOfTheChessPieces
        ->(child) Check
        ->(child) FormalGameRules
        ->(child) CheckmatePatterns
        ->(child) FirstAdvice
        ->(child) Notation

        #[order]:Integer `2`
	title `Elementary`
        h1 `Tutorial for beginners: Introduction of the Game`
	#content:String =`~ return "[[=placeholder.xhtml]]";`
	
}

IntroductionOfTheChessPieces{
        ->(extends) General
        ->(extends) Starters
        ->(child) Pawn
        ->(child) Knight
        ->(child) Bishop
        ->(child) Rook
        ->(child) Queen
        ->(child) King

        #[order]:Integer `1`
        title `Chess Pieces Introduction`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Pawn{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `1`
        title `Pawn`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/pawn.xhtml]]";`

}
Knight{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `2`
        title `Knight`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/knight.xhtml]]";`

}


Bishop{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `3`
        title `Bishop`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/bishop.xhtml]]";`

}
Rook{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `4`
        title `Rook`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/rook.xhtml]]";`

}
Queen{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `5`
        title `Queen`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/queen.xhtml]]";`

}
King{
        ->(extends) General
        ->(extends) Starters
        ->(extends)IntroductionOfTheChessPieces

        #[order]:Integer `6`
        title `King`
        h1 `Introduction to the Chess Pieces`
        #content:String =`~ return "[[=xml/start/king.xhtml]]";`

}

Check{
        ->(extends) General
        ->(extends) Starters
        #[order]:Integer `2`
        title `Check`
        h1 `Check`
        #content:String =`~ return "[[=xml/start/check.xhtml]]";`
}

FormalGameRules{
        ->(extends) General
        ->(extends) Starters
        #[order]:Integer `4`
        title `General Game Rules`
        h1 `Tutorial for beginners`
        #content:String =`~ return "[[=xml/start/rules.xhtml]]";`

}
CheckmatePatterns{
        ->(extends) General
        ->(extends) Starters
        #[order]:Integer `3`
        title `Simple patterns`
        h1 `Checkmating patterns`
        #content:String =`~ return "[[=xml/start/matingpatterns.xhtml]]";`


}
FirstAdvice{
        ->(extends) General
        ->(extends) Starters
        ->(child) OpeningWise
        ->(child) MakingWiseCaptures

        #[order]:Integer `5`
        title `First Guidance`
        h1 `Tutorial for beginners`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningWise{
        ->(extends) General
        ->(extends) Starters
        ->(extends) FirstAdvice

        #[order]:Integer `1`
        title `First Advice`
        h1 `Opening Wise`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}


MakingWiseCaptures{
        ->(extends) General
        ->(extends) Starters
        ->(extends) FirstAdvice

        #[order]:Integer `2`
        title `Making Wise Captures`
        h1 `Making Wise Captures`
        #content:String =`~ return "[[=xml/start/wisecaptures.xhtml]]";`

}
Notation{
        ->(extends)General
        ->(extends)Starters

        #[order]:Integer `6`
        title `Notation of Chess Moves`
        h1 `Making Wise Captures`
        #content:String =`~ return "[[=xml/start/notation.xhtml]]";`
}

Optional{
        ->(extends)General
        ->(child)Quotes
        ->(child)PawnGame
        #[order]:Integer `3`
        title `Optional Material`
        h1 `Making Wise Captures`
        #content:String =`~ return "[[=placeholder.xhtml]]";`
}

Quotes{
        ->(extends)General
        ->(extends)Optional
        #[order]:Integer `2`
        title `Quotes`
        h1 `Making Wise Captures`
        #content:String =`~ return "[[=placeholder.xhtml]]";`
}
PawnGame{
        ->(extends)General
        ->(extends)Optional
        #[order]:Integer `3`
        title `Pawn Game`
        h1 `Making Wise Captures`
        #content:String =`~ return "[[=placeholder.xhtml]]";`
}

Professional{
        ->(extends) General
        ->(child) Tactics2
        ->(child) Openings2
        ->(child) Quiz
        ->(child) Clock
        ->(child) Tips
        ->(child) Repertoire
        #[order]:Integer `4`
        title `Professional`
        h1 `Tutorial for advanced players`
	#content:String =`~ return "[[=xml/prof/professional.xhtml]]";`
        #prof:String =`~ return "[[=xml/prof/prof.xhtml]]";`

}
Tactics2{
        ->(extends) Professional
        ->(child) Forks
        ->(child) Pinning
        ->(child) Skewers
        ->(child) Uncovering
        ->(child) Remdef
        ->(child) Overloading
        ->(child) Deflection
        ->(child) Decoying
        #[order]:Integer `1`
        title `Tactics`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=xml/prof/tactics.xhtml]]";`

}
Forks{
        ->(extends) Professional
        #[order]:Integer `1`
        title `Forks`
        h1 `Forks`
	#content:String =`~ return "[[=xml/prof/forks.xhtml]]";`

}
Pinning{
        ->(extends) Professional
        #[order]:Integer `2`
        title `Pinning`
        h1 `Pinning`
        #content:String =`~ return "[[=xml/prof/pinning.xhtml]]";`

}
Skewers{
        ->(extends) Professional
        #[order]:Integer `3`
        title `Skewers`
        h1 `Skewers`
        #content:String =`~ return "[[=xml/prof/skewers.xhtml]]";`

}
Uncovering{
        ->(extends) Professional
        #[order]:Integer `4`
        title `Uncovering`
        h1 `Discovered Attack and Discovered Check`
        #content:String =`~ return "[[=xml/prof/uncover.xhtml]]";`

}
Remdef{
        ->(extends) Professional
        #[order]:Integer `5`
        title `Remove defender`
        h1 `Remove the defender`
        #content:String =`~ return "[[=xml/prof/remdef.xhtml]]";`

}
Overloading{
        ->(extends) Professional
        #[order]:Integer `6`
        title `Overloading`
        h1 `Overloading`
        #content:String =`~ return "[[=xml/prof/overload.xhtml]]";`

}
Deflection{
        ->(extends) Professional
        #[order]:Integer `7`
        title `Deflection`
        h1 `Deflection`
        #content:String =`~ return "[[=xml/prof/deflection.xhtml]]";`

}
Decoying{
        ->(extends) Professional
        #[order]:Integer `8`
        title `Decoying`
        h1 `Decoying`
        #content:String =`~ return "[[=xml/prof/decoy.xhtml]]";`

}
Openings2{
        ->(extends) Professional
        ->(child) OpeningSurvey2
        ->(child) OpeningSurvey3
        ->(child) OpeningSurvey4
        ->(child) OpeningSurvey5
        ->(child) OpeningSurvey6
        #[order]:Integer `2`
        title `Some openings`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningSurvey2{
        ->(extends) Professional
        #[order]:Integer `6`
        title `King's Indian Defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningSurvey3{
        ->(extends) Professional
        #[order]:Integer `7`
        title `Nimzo-Indian Defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningSurvey4{
        ->(extends) Professional
        #[order]:Integer `2`
        title `Benko Gambit`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningSurvey5{
        ->(extends) Professional
        #[order]:Integer `8`
        title `Queen's Gambit`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
OpeningSurvey6{
        ->(extends) Professional
        #[order]:Integer `5`
        title `Gruenfeld Defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`
}
Quiz{
        ->(extends) Professional
        #[order]:Integer `3`
        title `Best move quiz`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Clock{
        ->(extends) Professional
        #[order]:Integer `4`
        title `The chess clock`
        h1 `Use of the chess clock`
        #content:String =`~ return "[[=xml/prof/clock.xhtml]]";`

}
Tips{
        ->(extends) Professional
        ->(child) WinningTips
        ->(child) ImprovingTips
        #[order]:Integer `5`
        title `Tips`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
WinningTips{
        ->(extends) Professional
        #[order]:Integer `2`
        title `Winning tips`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
ImprovingTips{
        ->(extends) Professional
        #[order]:Integer `1`
        title `Improving tips`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire{
        ->(extends) Professional
        ->(child) Repertoire1
        ->(child) Repertoire2
        ->(child) Repertoire3
        ->(child) Repertoire4
        ->(child) Repertoire5
        #[order]:Integer `7`
        title `Opening repertoire`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire1{
        ->(extends) Professional
        #[order]:Integer `1`
        title `Benko Gambit`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire2{
        ->(extends) Professional
        #[order]:Integer `2`
        title `Gruenfeld defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire3{
        ->(extends) Professional
        #[order]:Integer `3`
        title `King's Indian Defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire4{
        ->(extends) Professional
        #[order]:Integer `5`
        title `Queen's Gambit`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}
Repertoire5{
        ->(extends) Professional
        #[order]:Integer `4`
        title `Nimzo-Indian Defence`
        h1 `Tutorial for professional players`
        #content:String =`~ return "[[=placeholder.xhtml]]";`

}